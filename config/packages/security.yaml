security:
    enable_authenticator_manager: true
    encoders:
        # this internal class is used by Symfony to represent in-memory users
        Symfony\Component\Security\Core\User\User: 'auto'
        App\Security\User:
            algorithm: auto


    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
#    providers:
        # used to reload user from session & other features (e.g. switch_user)
#        app_user_provider:
#            id: App\Security\UserProvider

    providers:
        # used to reload user from session & other features (e.g. switch_user)
        backend_users:
            memory:
                users:
#                    admin: { password: '$argon2id$v=19$m=65536,t=4,p=1$rrXAYqNjHOtMfV0zGEfeHQ$MA/iDvmTwyLvtrg/BoXSry/6BfuMiexC69ZATanEQr4', roles: [ 'ROLE_ADMIN' ] }
                    admin: { password: '$argon2id$v=19$m=65536,t=4,p=1$aDNQVWxCUGdQZ3I3T0dRTg$o+ZNmresR0MDKwahuAY8Hyk7vzJeRSJdBhDfx3wQMzI', roles: [ 'IS_AUTHENTICATED_FULLY' ] }


    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        login:
            pattern: ^/api/v1/test/login
            stateless: true
            provider: backend_users
            json_login:
                check_path: /api/v1/test/login_check
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        api:
            pattern: ^/api
            stateless: true
            provider: backend_users
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

        main:

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/api/v1/test/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }
